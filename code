#include<stdio.h>
#include<Math.h>
#include<string.h>
#include <time.h>
#include <Windows.h>
struct danxuanti //单选题 
{
	char timu[80000];
	char answer[100];
}*p, dx[100];
struct duoxuanti //多选题 
{
	char timu[80000];
	char answer[100];
}*p1, dx1[100];
struct panduanti //判断题 
{
	char timu[80000];
	char answer[100];
}*p2, dx2[100];
struct count //题目数量 
{
	int n1;
	int n2;
	int n3;
}c;
struct duoxuantidaan //多选题 答案 
{
	char answer[100];
}dx3[100];
struct kaoshitime //多选题 答案 
{
	int hour;
	int min;
}t;
struct score //考试得分
{
	int score1;
	int score2;
	int score3;
	int total;
}s;
int choose;//题目类型 
int people = 0;//考试人数
char answer1[100] = { ' ' };//存放答案的数组
char answer2[100] = { ' ' };//存放答案的数组
int scoreall[80];
/*函数声明*/
void danxuan();
void danxuan() {
	printf("请输入录入题目的数量：");
	scanf("%d", &c.n1);
	int i;
	//printf("(输入回车以确定,输入空格代替换行！)\n");
	for (i = 0; i < c.n1; i++) {
		printf("请输入第%d道题的题目\n", i + 1);
		getchar();
		gets(dx[i].timu);
		printf("请输入第%d道题的答案\n", i + 1);
		gets(dx[i].answer);
	}
	printf("输入完毕,即将返回主菜单!\n");
	system("pause");
	system("cls");    //清屏 
}
void duoxuan();
void duoxuan() { /*多选*/
	printf("请输入录入题目的数量：");
	scanf("%d", &c.n2);
	int i;
	printf("(输入回车以确定)");
	for (i = 0; i < c.n2; i++) {
		printf("请输入第%d道题的题目\n", i + 1);
		getchar();
		gets(dx1[i].timu);
		printf("请输入第%d道题的答案\n", i + 1);
		gets(dx1[i].answer);
	}
	printf("输入完毕,即将返回主菜单!\n");
	system("pause");
	system("cls");    //清屏 
}
void read(int n);
void read(int n) {
	/*单选题*/
	if (c.n1 != -1) {
		printf("\t\t\t\t**************************************************\n");
		printf("\t\t\t\t\t\t单选题题目和答案如下:\n");
		printf("\t\t\t\t**************************************************\n");
		int count = 0;
		for (p = dx; p < dx + c.n1; p++) {
			printf("第%d题题目为：\n  %s\n", count + 1, p->timu);
			printf("第%d题答案为：\n  %s\n", count + 1, p->answer);
			count++;
		}
	}
	/*多选题*/
	if (c.n2 != -1) {
		printf("\t\t\t\t**************************************************\n");
		printf("\t\t\t\t\t\t多选题题目和答案如下:\n");
		printf("\t\t\t\t**************************************************\n");
		int count1 = 0;
		for (p1 = dx1; p1 < dx1 + c.n2; p1++) {
			printf("第%d题题目为：\n  %s\n", count1 + 1, p1->timu);
			printf("第%d题答案为：\n  %s\n", count1 + 1, p1->answer);
			count1++;
		}
	}
	/*判断题*/
	if (c.n3 != -1) {
		printf("\t\t\t\t**************************************************\n");
		printf("\t\t\t\t\t\t判断题题目和答案如下:\n");
		printf("\t\t\t\t**************************************************\n");
		int count1 = 0;
		for (p2 = dx2; p2 < dx2 + c.n3; p2++) {
			printf("第%d题题目为：\n  %s\n", count1 + 1, p2->timu);
			printf("第%d题答案为：\n  %s\n", count1 + 1, p2->answer);
			count1++;
		}
	}
	if (choose < 1 && choose>3) {
		printf("暂无数据\n");
	}
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t\t\t即将返回主菜单！\n");
	printf("\t\t\t\t**************************************************\n");
	system("pause");
	system("cls");    //清屏 
}
void settime();
void settime() {
	int hour;
	int min;
	printf("请输入考试结束的时间:\n");
	printf("小时(例:17)：\n");
	scanf("%02d", &t.hour);
	printf("分钟(例:15)：\n");
	scanf("%02d", &t.min);
	printf("hour=%02d  min=%02d\n",t. hour, t.min);
	system("pause");
}
void menu();
void menu() {
	time_t timep;    //系统时间 
	struct tm* p;
	time(&timep);
	p = gmtime(&timep);
	printf("\t\t\t\t\t\t   %d年%02d月%02d日\n", 1900 + p->tm_year, 1 + p->tm_mon, p->tm_mday);
	printf("\t\t\t\t\t\t  当前时间%02d时%02d分%\n", 8 + p->tm_hour, p->tm_min);
	printf("\t\t\t\t\t**************************************\n");
	printf("\t\t\t\t\t**************************************\n");
	printf("\t\t\t\t\t******                        ********\n");
	printf("\t\t\t\t\t******       考 试 系 统      ********\n");
	printf("\t\t\t\t\t******                        ********\n");
	printf("\t\t\t\t\t******                        ********\n");
	printf("\t\t\t\t\t******     1. 录入题目信息    ********\n");
	printf("\t\t\t\t\t******     2. 查看试卷信息    ********\n");
	printf("\t\t\t\t\t******     3. 考试时间设置    ********\n");
	printf("\t\t\t\t\t******     4. 考 试 分 析     ********\n");
	printf("\t\t\t\t\t******     5. 删 除 题 目     ********\n");
	printf("\t\t\t\t\t******     6. 开 始 考 试     ********\n");
	printf("\t\t\t\t\t******     0. 退 出 系 统     ********\n");
	printf("\t\t\t\t\t******                        ********\n");
	printf("\t\t\t\t\t******                        ********\n");
	printf("\t\t\t\t\t**************************************\n");
	printf("\t\t\t\t\t**************************************\n");
}
void panduan();
void panduan() {
	printf("请输入录入题目的数量：");
	scanf("%d", &c.n3);
	int i;
	printf("(输入回车以确定)");
	for (i = 0; i < c.n3; i++) {
		printf("请输入第%d道题的题目\n", i + 1);
		getchar();
		gets(dx2[i].timu);
		printf("请输入第%d道题的答案(请输入T或F)\n", i + 1);
		gets(dx2[i].answer);
	}
	printf("输入完毕,即将返回主菜单!\n");
	system("pause");
	system("cls");    //清屏 
}
void delete1();
void delete1() {
	int num;//要删除的题号
	int i;
	int leixing;
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****       请选择要输入题目的类型             ****\n");
	printf("\t\t\t\t****               1.单选题                   ****\n");
	printf("\t\t\t\t****               2.多选题                   ****\n");
	printf("\t\t\t\t****               3.判断题                   ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t**************************************************\n");
	printf("请选择要输入题目的类型：\n");
	scanf("%d", &leixing);
	while (leixing != 1 && leixing != 2) {
		printf("您的输入有错，请重新选择\n");
		scanf("%d", &leixing);
	}
	if (leixing == 1) {
		printf("单选题共有%d题:\n", c.n1);
		if (c.n1 != 0) {
			printf("请输入要删除的题目题号:\n");
			scanf("%d", &num);
			for (i = num; i < c.n1; i++)//删除题目
			{
				dx[i - 1] = dx[i];	
				c.n1--;
				printf("删除成功！\n");
			}
		}
		else {
			printf("暂无题目！\n");
		}
	}
	else if (leixing == 2) {
		printf("多选题共有%d题:\n", c.n2);
		if (c.n2 != 0) {
			printf("请输入要删除的题目题号:\n");
			scanf("%d", &num);
			for (i = num; i < c.n2; i++)//删除题目
			{
				dx1[i - 1] = dx1[i];
				c.n2--;
				printf("删除成功！\n");
			}
		}
		else {
			printf("暂无题目！\n");
		}
	}
	system("pause");
	system("cls");    //清屏
}
void analysis();
void analysis() {
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****		   考	试	分	析			      ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t**************************************************\n");
	int i;
	int max = -999;
	int min = 999;
		for (i = 0; i < people; i++) {
			printf("第%d个考生总分为:%d\n", i+1,scoreall[i]);
	}
		for (i = 0; i < people; i++) {
			if (scoreall[i] > max) {   //判断上面定义的max数组第二位是否大于第一位
				max = scoreall[i];	    //如果大于max，max变为数组的第二位，依次判断，求出最大值
			}
		}
		for (i = 0; i < people; i++) {
			if (scoreall[i] < min) {   //判断上面定义的max数组第二位是否大于第一位
				min = scoreall[i];	    //如果大于max，max变为数组的第二位，依次判断，求出最大值
			}
		}
		float sum = 0;
		float aver = 0;
		for (i = 0; i < people; i++) {
			sum = scoreall[i] + sum;
		}
		aver = sum / (float)people;
		if (max != -999) printf("考试最高分为：%d\n", max);
		if (min != 999)printf("考试最低分为:%d\n", min);
		if (sum != 0)printf("考试平均分为：%.2f\n",aver);
	system("pause");
	system("cls");    //清屏 
}
int  menu2(int n);
int  menu2(int n) {
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****       请选择要输入题目的数量和类型       ****\n");
	printf("\t\t\t\t****               1.单选题                   ****\n");
	printf("\t\t\t\t****               2.多选题                   ****\n");
	printf("\t\t\t\t****               3.判断题                   ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t****                                          ****\n");
	printf("\t\t\t\t**************************************************\n");
	printf("\t\t\t\t**************************************************\n");
	printf("请输入录入题目的类型:");
	scanf("%d", &choose);
	while (choose > 3 || choose < 1) {//当输入不合理重新输入 
		printf("您的输入有错，请重新选择\n");
		scanf("%d", &choose);
	}
	switch (choose) {
	case 1:
	{
		danxuan();
	}break;
	case 2:duoxuan(); break;
	case 3:panduan(); break;
	}
	return n;
}
void start();
void start() {
	char name[80];
	int xuehao;
	int cxuehao = { 123 };
	printf("请输入学号:\n");
	scanf("%d", &xuehao);
	printf("请输入姓名:\n");
	scanf("%s", name);
	if (xuehao == cxuehao) {
		printf("考试开始！\n");
		time_t timep;    //系统时间 
		struct tm* q;
		time(&timep);
		q = gmtime(&timep);
		printf("\t\t\t\t  考试时间%02d时%02d分%02d秒%\n", 8 + q->tm_hour, q->tm_min,q->tm_sec);
		/*单选题*/
		if (c.n1 != -1) {
			printf("\t\t\t\t**************************************************\n");
			printf("\t\t\t\t\t\t单选题测试:\n");
			printf("\t\t\t\t**************************************************\n");
			int count1 = 0;
			for (p = dx; p < dx + c.n1; p++) {
				printf("第%d题题目为：\n  %s\n", count1 + 1, p->timu);
				printf("请输入答案：\n ");
				getchar();
				answer1[count1] = getchar();
				count1++;
			}
		}
		if (c.n3 != -1) {
			printf("\t\t\t\t**************************************************\n");
			printf("\t\t\t\t\t\t判断题测试:\n");
			printf("\t\t\t\t**************************************************\n");
			int count1 = 0;
			for (p2 = dx2; p2 < dx2 + c.n3; p2++) {
				printf("第%d题题目为：\n  %s\n", count1 + 1, p2->timu);
				printf("请输入答案(T或F)：\n ");
				getchar();
				answer2[count1] = getchar();
				count1++;
			}
		}
		int i = 0;
		s.score1 = 0;
		for (i = 0; i < c.n1; i++) {//计算单选题得分
			int flag = 0;
			if (answer1[i] == dx[i].answer[0]) {
				s.score1 += 2;
				flag = 1;
				printf("单选题第%d题的得分为:2\n",i+1);
			}
			if(flag==0)printf("单选题第%d题的得分为:0\n",i+1);
		}
		for (i = 0; i < c.n3; i++) {//计算判断题得分
			int flag1 = 0;
			if (answer2[i] == dx2[i].answer[0]) {
				s.score3 += 2;
				flag1 = 1;
				printf("判断题第%d题的得分为:2\n",i+1);
			}
			if(flag1==0)printf("判断题第%d题的得分为:0\n",i+1);
		}
		printf("考试已结束！\n");
		if(c.n1!=-1)printf("考试单选题得分为:%d\n", s.score1);
		if (c.n3 != -1)printf("考试判断题得分为:%d\n", s.score3);
		printf("考试总分为:%d\n", s.score3+s.score1);
		scoreall[people] = s.score3 + s.score1;
		people++;
		time_t timep1;    //系统时间 
		struct tm* q1;    
		time(&timep1);    
		q1 = gmtime(&timep1);
		printf("\t\t\t\t  考试结束,时间为%02d时%02d分%02d秒%\n", 8 + q1->tm_hour, q1->tm_min, q1->tm_sec);
		printf("\n");
		system("pause");
		system("cls");    //清屏 
	}
	else {
		printf("无此考生\n");
	}
}
void settime();
int main(void) {
	system("color 17");//设置背景颜色
	int a;
	int n = -1;//题目数量 
L1:	menu();//打印第一个菜单 
	int choose;
	printf("请输入数字选择系统功能:");
	scanf("%d", &choose);
	while (choose > 6 || choose < 0) {//当输入不合理重新输入 
		printf("您的输入有错，请重新选择\n");
		scanf("%d", &choose);
	}
	system("color 07");//设置背景颜色
	system("cls");    //清屏 
	switch (choose) {
	case 1: {
		n = menu2(n);//录入题目 
	}break;
	case 2: {
		read(n);//查看题目 
	} break;
	case 3: {
		settime();//设置考试时间 
	} break;
	case 4: {
		analysis();//成绩分析 
	} break;
	case 5: {
		delete1();//删除题目 
	} break;
	case 6: {
		start();//开始考试 
	} break;
	case 0:
	{
		printf("您选择退出系统!\n");
		return 0;
	}
	}
	goto L1;
	printf("main函数运行结束\n");
}
